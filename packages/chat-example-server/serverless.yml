service: graphql-server-demo # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-north-1
  deploymentBucket: 
    name: deployment-bucket-stockholm
  environment:
    snsArn: { "Fn::Join" : ["", ["arn:aws:sns:${self:custom.region}:", { "Ref" : "AWS::AccountId" }, ":${self:custom.eventDispatchTopic}" ] ]  }
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"
    - Effect: Allow
      Action:
        - execute-api:ManageConnections
      Resource: 'arn:aws:execute-api:*:*:*/development/POST/@connections/*'


custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  eventDispatchTopic: "${self:service}-event-dispatch-${self:custom.stage}"

functions:
  mainHandler:
    handler: dist/index.handler
    environment:
      APIG_UID: !Ref "ApiGatewayRestApi"
      WSS_UID: !Ref "WebsocketsApi"
      APIG_URL:
        !Join
          - ''
          - - 'https://'
            - !Ref ApiGatewayRestApi
            - '.execute-api.'
            - ${opt:region, self:provider.region}
            - '.amazonaws.com/'
            - ${opt:stage, self:provider.stage}
      WSS_URL:
        !Join
          - ''
          - - 'wss://'
            - !Ref WebsocketsApi
            - '.execute-api.'
            - ${opt:region, self:provider.region}
            - '.amazonaws.com/'
            - ${opt:stage, self:provider.stage}
    events:
      - http:
          path: /graphql
          method: ANY
          cors: true 
          headers: 
            - Content-Type
            - X-Amz-Date
            - Authorization
            - X-Api-Key
            - X-Amz-Security-Token
            - X-Amz-User-Agent
            - X-Apollo-Tracing
            - test
      - sns: ${self:custom.eventDispatchTopic}
      - websocket: 
         route: $connect
      - websocket: 
         route: $disconnect
      - websocket: $default
